// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Presistence;

namespace Presistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210624131658_changeAddFotografiaAtDepartamenti")]
    partial class changeAddFotografiaAtDepartamenti
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("Domain.Barna", b =>
                {
                    b.Property<Guid>("Barnat_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataRegjistrimit")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.HasKey("Barnat_Id");

                    b.ToTable("Barnat");
                });

            modelBuilder.Entity("Domain.BloodDonor", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BloodGroup")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastDonation")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("BloodDonors");
                });

            modelBuilder.Entity("Domain.Department", b =>
                {
                    b.Property<Guid>("Department_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fotografia")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Department_id");

                    b.ToTable("Departmentet");
                });

            modelBuilder.Entity("Domain.Dhoma", b =>
                {
                    b.Property<Guid>("Dhoma_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pershkrimi")
                        .HasColumnType("TEXT");

                    b.Property<string>("llojiDhomes")
                        .HasColumnType("TEXT");

                    b.Property<int>("nrDhomes")
                        .HasColumnType("INTEGER");

                    b.HasKey("Dhoma_Id");

                    b.ToTable("Dhomat");
                });

            modelBuilder.Entity("Domain.Fatura", b =>
                {
                    b.Property<Guid>("Fatura_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("KrijuarMe")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Pacient_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pershkrimi")
                        .HasColumnType("TEXT");

                    b.Property<int>("Shuma")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Statusi")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulli")
                        .HasColumnType("TEXT");

                    b.HasKey("Fatura_Id");

                    b.HasIndex("Pacient_id");

                    b.ToTable("Faturat");
                });

            modelBuilder.Entity("Domain.Infermierja", b =>
                {
                    b.Property<Guid>("Infermierja_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Departamenti")
                        .HasColumnType("TEXT");

                    b.Property<string>("Emri")
                        .HasColumnType("TEXT");

                    b.Property<int>("Koeficienti")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mbiemri")
                        .HasColumnType("TEXT");

                    b.HasKey("Infermierja_Id");

                    b.ToTable("Infermieret");
                });

            modelBuilder.Entity("Domain.Laboratori", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Emri")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mosha")
                        .HasColumnType("TEXT");

                    b.Property<string>("NrId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pershkrimi")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rezultati")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Laboratoret");
                });

            modelBuilder.Entity("Domain.Mjeku", b =>
                {
                    b.Property<Guid>("Mjeku_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Ditlindja")
                        .HasColumnType("TEXT");

                    b.Property<string>("Emri")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mbimeri")
                        .HasColumnType("TEXT");

                    b.Property<string>("Specializimi")
                        .HasColumnType("TEXT");

                    b.Property<string>("depName")
                        .HasColumnType("TEXT");

                    b.HasKey("Mjeku_Id");

                    b.ToTable("Mjeket");
                });

            modelBuilder.Entity("Domain.Pacient", b =>
                {
                    b.Property<Guid>("Pacient_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("adresa")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ditlindja")
                        .HasColumnType("TEXT");

                    b.Property<string>("emri")
                        .HasColumnType("TEXT");

                    b.Property<string>("grupigjakut")
                        .HasColumnType("TEXT");

                    b.Property<string>("mbimeri")
                        .HasColumnType("TEXT");

                    b.Property<string>("qyteti")
                        .HasColumnType("TEXT");

                    b.HasKey("Pacient_Id");

                    b.ToTable("pacientet");
                });

            modelBuilder.Entity("Domain.Paisjet", b =>
                {
                    b.Property<Guid>("Paisja_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Department_Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("emertimi")
                        .HasColumnType("TEXT");

                    b.Property<string>("image")
                        .HasColumnType("TEXT");

                    b.Property<string>("pershkrimi")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("servisimi")
                        .HasColumnType("TEXT");

                    b.HasKey("Paisja_Id");

                    b.HasIndex("Department_Id");

                    b.ToTable("Paisjets");
                });

            modelBuilder.Entity("Domain.Provoprovo", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("emri")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("provoprovos");
                });

            modelBuilder.Entity("Domain.Shtrat", b =>
                {
                    b.Property<Guid>("Shtrat_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pershkrimi")
                        .HasColumnType("TEXT");

                    b.Property<string>("Statusi")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("llojiShtratit_id")
                        .HasColumnType("TEXT");

                    b.Property<int>("nrShtratit")
                        .HasColumnType("INTEGER");

                    b.HasKey("Shtrat_id");

                    b.HasIndex("llojiShtratit_id");

                    b.ToTable("Shtreter");
                });

            modelBuilder.Entity("Domain.ShtreteritNeDhome", b =>
                {
                    b.Property<Guid>("ShtreteritNeDhome_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Dhoma_Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Shtrat_Id")
                        .HasColumnType("TEXT");

                    b.HasKey("ShtreteritNeDhome_Id");

                    b.HasIndex("Dhoma_Id");

                    b.HasIndex("Shtrat_Id");

                    b.ToTable("ShtreteritNeDhome");
                });

            modelBuilder.Entity("Domain.Terminet", b =>
                {
                    b.Property<Guid>("termini_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Mjeku_Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Pacient_Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("orari")
                        .HasColumnType("TEXT");

                    b.HasKey("termini_ID");

                    b.HasIndex("Mjeku_Id");

                    b.HasIndex("Pacient_Id");

                    b.ToTable("Terminet");
                });

            modelBuilder.Entity("Domain.Therapy", b =>
                {
                    b.Property<Guid>("Therapy_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("OnGoing")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Pacient_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("terapia")
                        .HasColumnType("TEXT");

                    b.HasKey("Therapy_Id");

                    b.HasIndex("Pacient_id");

                    b.ToTable("Therapies");
                });

            modelBuilder.Entity("Domain.caktoShtratin", b =>
                {
                    b.Property<Guid>("caktoShtratin_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Pacient_id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Shtrat_id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("kohaHyrjes")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("kohaLeshimit")
                        .HasColumnType("TEXT");

                    b.HasKey("caktoShtratin_id");

                    b.HasIndex("Pacient_id");

                    b.HasIndex("Shtrat_id");

                    b.ToTable("caktoShtreterit");
                });

            modelBuilder.Entity("Domain.llojiShtratit", b =>
                {
                    b.Property<Guid>("llojiShtratit_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pershkrimi")
                        .HasColumnType("TEXT");

                    b.Property<string>("emri")
                        .HasColumnType("TEXT");

                    b.HasKey("llojiShtratit_id");

                    b.ToTable("llojeteShtreterve");
                });

            modelBuilder.Entity("Domain.prov", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("prova2")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("prova");
                });

            modelBuilder.Entity("Domain.Fatura", b =>
                {
                    b.HasOne("Domain.Pacient", "Pacient")
                        .WithMany()
                        .HasForeignKey("Pacient_id")
                        .HasConstraintName("FK_Fatura_Pacient_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Paisjet", b =>
                {
                    b.HasOne("Domain.Department", "Department")
                        .WithMany()
                        .HasForeignKey("Department_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Shtrat", b =>
                {
                    b.HasOne("Domain.llojiShtratit", "llojiShtratit")
                        .WithMany()
                        .HasForeignKey("llojiShtratit_id")
                        .HasConstraintName("FK_Shtrat_llojiShtratit_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ShtreteritNeDhome", b =>
                {
                    b.HasOne("Domain.Dhoma", "Dhoma")
                        .WithMany()
                        .HasForeignKey("Dhoma_Id")
                        .HasConstraintName("FK_ShtreteritNeDhome_Dhoma_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Shtrat", "Shtrat")
                        .WithMany()
                        .HasForeignKey("Shtrat_Id")
                        .HasConstraintName("FK_ShtreteritNeDhome_Shtrat_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Terminet", b =>
                {
                    b.HasOne("Domain.Mjeku", "mjeket")
                        .WithMany()
                        .HasForeignKey("Mjeku_Id")
                        .HasConstraintName("FK_Terminat_Doktoret")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Pacient", "pacient")
                        .WithMany()
                        .HasForeignKey("Pacient_Id")
                        .HasConstraintName("FK_Temrinet_Pacinetat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Therapy", b =>
                {
                    b.HasOne("Domain.Pacient", "Pacient")
                        .WithMany()
                        .HasForeignKey("Pacient_id")
                        .HasConstraintName("FK_Therapy_Pacient_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.caktoShtratin", b =>
                {
                    b.HasOne("Domain.Pacient", "Pacient")
                        .WithMany()
                        .HasForeignKey("Pacient_id")
                        .HasConstraintName("FK_caktoShtratin_Pacient_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Shtrat", "Shtrat")
                        .WithMany()
                        .HasForeignKey("Shtrat_id")
                        .HasConstraintName("FK_caktoShtratin_Shtrat_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
